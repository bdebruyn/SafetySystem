@startuml
left to right direction

' global spacing (Graphviz)
'skinparam ranksep 5
'skinparam Padding 2
'skinparam Shadowing false
skinparam linetype ortho   ' or: polyline (default), spline

state SafetyRules {
   top to bottom direction

   SafetyRules: '  Safety Model for a factory floor 3D printer.
   SafetyRules: '  Description (not intended as requirements):
   SafetyRules: '     1. Printer doors are rigged with sensors that cut power if opened in the wrong state.
   SafetyRules: '     2. Transitions to a procedural state will disable select door sensors.
   SafetyRules: '     3. Transitions out of a procedural state will enable select door sensors.

   state Idle
      Idle : ' Power is off. Tranistion to Active state on power up

   Active -up-> Idle : evIdle
      Active : ' Power on.
      Active : ' Wait for evLoadBuildPlate

   state Faulted
      Faulted : ' Violation detected. Power is off.

   state BuildPlateLoader {
      top to bottom direction
 
      state OpenDoor
          OpenDoor : entry/send(evRequestDoorOpen)
      state DoorOpened
          DoorOpened : entry/send(evRequestLoadBuildPlateNotification)
      state BuildPlateLoaded
          BuildPlateLoaded : entry/send(evRequestDoorClose)

      [*] -> OpenDoor  
      OpenDoor --> DoorOpened : evDoorOpened
      DoorOpened --> BuildPlateLoaded : evBuildPlateLoaded
      BuildPlateLoaded --> [*] : evDoorClosed
      BuildPlateLoaded --> Faulted : evBuildPlateUnloaded
   }

   [*] --> Idle
   Idle -> Active: evActive

   Active -> Faulted: evFault
   Active -> BuildPlateLoader: evLoadBuildPlate 

   Faulted -> Idle : evIdle

   BuildPlateLoader -> Active
   BuildPlateLoader --> Faulted : evFault 

}
@enduml

